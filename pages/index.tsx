import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useCallback, useState } from 'react';
import Header from 'components/Header';
import Pagination from 'components/Pagination/Pagination';

export default function Home({ movie }: any) {
  const router = useRouter();

  const [page, setPage] = useState<number>(movie.pagination.current_page);
  const handleChangePage = useCallback(
    (value: any) => {
      setPage(value.selected + 1);
      router.push(`?page=${value.selected + 1}`, undefined, {
        shallow: false,
      });
    },
    [router]
  );
  return (
    <div className='container mx-auto max-w-7xl'>
      <Head>
        <title>Home</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <main>
        <section className='mt-[5px]'>
          <div className='mb-[34px]'>
            <h4 className='text-black font-medium text-base'>
              Showing search results for: <span className='text-gray-custom-2'>Incep</span>
            </h4>
          </div>
          <div className='grid grid-cols-6 gap-5 mb-[34px]'>
            {movie.data.map((item: any, index: number) => (
              <Link href={`/anime/${item.mal_id}`} key={item.mal_id} className='cursor-pointer '>
                <div className='relative'>
                  <div className='h-[287px] rounded-[20px] overflow-hidden'>
                    <img
                      src={item.images.jpg.large_image_url}
                      alt=''
                      className='h-full w-full object-center'
                    />
                  </div>
                  <div className='absolute top-[13px] left-[13px]'>
                    <span className='text-white text-base font-semibold'>‚≠ê {item.score}</span>
                  </div>
                </div>
              </Link>
            ))}
          </div>
          <div className='mb-[80px]'>
            <Pagination
              totalPage={movie.pagination.items.count}
              activePage={page}
              handleChange={handleChangePage}
            />
          </div>
        </section>
      </main>
    </div>
  );
}

export async function getServerSideProps(context: any) {
  // Call an external API endpoint to get posts.
  // You can use any data fetching library
  const res = await fetch(
    `https://api.jikan.moe/v4/anime?page=${
      context.query?.page ? context.query?.page : '1'
    }&limit=10`
  );
  const movie = await res.json();

  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      movie,
    },
  };
}
